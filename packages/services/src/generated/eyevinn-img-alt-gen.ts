/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    /** Say hello */
    get: {
      responses: {
        /** The magical words! */
        200: {
          schema: string;
        };
      };
    };
  };
  '/img-alt-geninstance': {
    /** List all running img-alt-gen instances */
    get: {
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the img-alt-gen instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
            OpenaiApiKey: string;
          }[];
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
    /** Launch a new img-alt-gen instance */
    post: {
      parameters: {
        body: {
          body?: {
            /** @description Name of the img-alt-gen instance */
            name: string;
            OpenaiApiKey: string;
          };
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the img-alt-gen instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
            OpenaiApiKey: string;
          };
        };
        /** Default Response */
        403: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        409: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/img-alt-geninstance/{id}': {
    /** Obtain status and resource URLs for an img-alt-gen instance */
    get: {
      parameters: {
        path: {
          /** Name of the img-alt-gen instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the img-alt-gen instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
            OpenaiApiKey: string;
          };
        };
        /** Default Response */
        404: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
    /** Stop and remove an img-alt-gen instance */
    delete: {
      parameters: {
        path: {
          /** Name of the img-alt-gen instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        204: {
          schema: string;
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/health/{id}': {
    /** Return status of img-alt-gen instance */
    get: {
      parameters: {
        path: {
          /** Name of the img-alt-gen instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @enum {string} */
            status: 'starting' | 'running' | 'stopped' | 'failed' | 'unknown';
          };
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/logs/{id}': {
    /** Return the latest logs from the img-alt-gen instance */
    get: {
      parameters: {
        query: {
          timestamps?: boolean;
          sinceSeconds?: number;
        };
        path: {
          /** Name of the img-alt-gen instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: string;
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
  '/ports/{id}': {
    /** Return the exposed extra ports for img-alt-gen instance */
    get: {
      parameters: {
        path: {
          /** Name of the img-alt-gen instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            externalIp: string;
            externalPort: number;
            internalPort: number;
          }[];
        };
        /** Default Response */
        500: {
          schema: {
            /** @description Reason why something failed */
            reason: string;
          };
        };
      };
    };
  };
}

export interface definitions {}

export interface operations {}

export interface external {}

export type EyevinnImgAltGen =
  paths['/img-alt-geninstance/{id}']['get']['responses']['200']['schema'];

export type EyevinnImgAltGenConfig =
  paths['/img-alt-geninstance']['post']['parameters']['body']['body'];
import {
  Context,
  createInstance,
  waitForInstanceReady,
  removeInstance,
  getInstance
} from '@osaas/client-core';
/**
 * @namespace eyevinn-img-alt-gen
 * @description Enhance image accessibility effortlessly with our Image Description Generator. Utilize OpenAI's prowess to create precise alt tags instantly, making your visuals more inclusive and SEO-friendly!
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://docs.osaas.io/osaas.wiki/Service:-Image-Description-Generator.html|Online docs} for further information
 */

/**
 * @typedef {Object} EyevinnImgAltGenConfig
 * @property {string} name - Name of img-alt-gen
 * @property {string} OpenaiApiKey - OpenaiApiKey

 * 
 */

/**
 * @typedef {Object} EyevinnImgAltGen
 * @property {string} name - Name of the Image Description Generator instance
 * @property {string} url - URL of the Image Description Generator instance
 *
 */

/**
 * Create a new Image Description Generator instance
 *
 * @memberOf eyevinn-img-alt-gen
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {EyevinnImgAltGenConfig} body - Service instance configuration
 * @returns {EyevinnImgAltGen} - Service instance
 * @example
 * import { Context } from '@osaas/client-core';
 * import { createEyevinnImgAltGenInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const body: EyevinnImgAltGenConfig = { name: 'myinstance', ... };
 * const instance = await createEyevinnImgAltGenInstance(ctx, body);
 * console.log(instance.url);
 */
export async function createEyevinnImgAltGenInstance(
  ctx: Context,
  body: EyevinnImgAltGenConfig
): Promise<EyevinnImgAltGen> {
  const serviceAccessToken = await ctx.getServiceAccessToken(
    'eyevinn-img-alt-gen'
  );
  const instance = await createInstance(
    ctx,
    'eyevinn-img-alt-gen',
    serviceAccessToken,
    body
  );
  await waitForInstanceReady('eyevinn-img-alt-gen', instance.name, ctx);
  return instance;
}

/**
 * Remove a Image Description Generator instance
 *
 * @memberOf eyevinn-img-alt-gen
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the generator to be removed
 */
export async function removeEyevinnImgAltGenInstance(
  ctx: Context,
  name: string
): Promise<void> {
  const serviceAccessToken = await ctx.getServiceAccessToken(
    'eyevinn-img-alt-gen'
  );
  await removeInstance(ctx, 'eyevinn-img-alt-gen', name, serviceAccessToken);
}

/**
 * Get a Image Description Generator instance
 *
 * @memberOf eyevinn-img-alt-gen
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the generator to be retrieved
 * @returns {EyevinnImgAltGen} - Service instance
 * @example
 * import { Context } from '@osaas/client-core';
 * import { getEyevinnImgAltGenInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await getEyevinnImgAltGenInstance(ctx, 'myinstance');
 * console.log(instance.url);
 */
export async function getEyevinnImgAltGenInstance(
  ctx: Context,
  name: string
): Promise<EyevinnImgAltGen> {
  const serviceAccessToken = await ctx.getServiceAccessToken(
    'eyevinn-img-alt-gen'
  );
  return await getInstance(
    ctx,
    'eyevinn-img-alt-gen',
    name,
    serviceAccessToken
  );
}
