/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    /** Say hello */
    get: {
      responses: {
        /** The magical words! */
        200: {
          schema: string;
        };
      };
    };
  };
  '/flyimginstance': {
    /** List all running flyimg instances */
    get: {
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the flyimg instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
          }[];
        };
        /** Default Response */
        500: {
          schema: string;
        };
      };
    };
    /** Launch a new flyimg instance */
    post: {
      parameters: {
        body: {
          body?: {
            /** @description Name of the flyimg instance */
            name: string;
          };
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the flyimg instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
          };
        };
        /** Default Response */
        500: {
          schema: string;
        };
      };
    };
  };
  '/flyimginstance/{id}': {
    /** Obtain status and resource URLs for an flyimg instance */
    get: {
      parameters: {
        path: {
          /** Name of the flyimg instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @description Name of the flyimg instance */
            name: string;
            /** @description URL to instance API */
            url: string;
            resources: {
              license: {
                /** @description URL to license information */
                url: string;
              };
              apiDocs?: {
                /** @description URL to instance API documentation */
                url: string;
              };
              app?: {
                /** @description URL to instance application (GUI) */
                url: string;
              };
            };
          };
        };
        /** Default Response */
        404: {
          schema: string;
        };
        /** Default Response */
        500: {
          schema: string;
        };
      };
    };
    /** Stop and remove an flyimg instance */
    delete: {
      parameters: {
        path: {
          /** Name of the flyimg instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        204: {
          schema: string;
        };
        /** Default Response */
        500: {
          schema: string;
        };
      };
    };
  };
  '/health/{id}': {
    /** Return status of flyimg instance */
    get: {
      parameters: {
        path: {
          /** Name of the flyimg instance */
          id: string;
        };
      };
      responses: {
        /** Default Response */
        200: {
          schema: {
            /** @enum {string} */
            status: 'starting' | 'running' | 'stopped' | 'failed' | 'unknown';
          };
        };
        /** Default Response */
        500: {
          schema: string;
        };
      };
    };
  };
}

export interface definitions {}

export interface operations {}

export interface external {}

export type FlyimgFlyimg =
  paths['/flyimginstance/{id}']['get']['responses']['200']['schema'];

export type FlyimgFlyimgConfig =
  paths['/flyimginstance']['post']['parameters']['body']['body'];
import {
  Context,
  createInstance,
  waitForInstanceReady,
  removeInstance,
  getInstance
} from '@osaas/client-core';
/**
 * @namespace flyimg-flyimg
 * @description An application that allows you to resize, crop, and compress images on the fly. 

By default, Flyimg generates the AVIF image format (when the browser supports it) which provides superior compression compared to other formats.

Additionally, Flyimg also generates the WebP format, along with the impressive MozJPEG compression algorithm to optimize images, other formats are supported also such as PNG and GIF.
 * @author Eyevinn Technology AB <osc@eyevinn.se>
 * @copyright 2025 Eyevinn Technology AB
 * @see {@link https://github.com/flyimg/flyimg|Online docs} for further information
 */

/**
 * @typedef {Object} FlyimgFlyimgConfig
 * @property {string} name - Name of flyimg

 * 
 */

/**
 * @typedef {Object} FlyimgFlyimg
 * @property {string} name - Name of the flyimg instance
 * @property {string} url - URL of the flyimg instance
 *
 */

/**
 * Create a new flyimg instance
 *
 * @memberOf flyimg-flyimg
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {FlyimgFlyimgConfig} body - Service instance configuration
 * @returns {FlyimgFlyimg} - Service instance
 * @example
 * import { Context } from '@osaas/client-core';
 * import { createFlyimgFlyimgInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const body: FlyimgFlyimgConfig = { name: 'myinstance', ... };
 * const instance = await createFlyimgFlyimgInstance(ctx, body);
 * console.log(instance.url);
 */
export async function createFlyimgFlyimgInstance(
  ctx: Context,
  body: FlyimgFlyimgConfig
): Promise<FlyimgFlyimg> {
  const serviceAccessToken = await ctx.getServiceAccessToken('flyimg-flyimg');
  const instance = await createInstance(
    ctx,
    'flyimg-flyimg',
    serviceAccessToken,
    body
  );
  await waitForInstanceReady('flyimg-flyimg', instance.name, ctx);
  return instance;
}

/**
 * Remove a flyimg instance
 *
 * @memberOf flyimg-flyimg
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the flyimg to be removed
 */
export async function removeFlyimgFlyimgInstance(
  ctx: Context,
  name: string
): Promise<void> {
  const serviceAccessToken = await ctx.getServiceAccessToken('flyimg-flyimg');
  await removeInstance(ctx, 'flyimg-flyimg', name, serviceAccessToken);
}

/**
 * Get a flyimg instance
 *
 * @memberOf flyimg-flyimg
 * @async
 * @param {Context} context - Open Source Cloud configuration context
 * @param {string} name - Name of the flyimg to be retrieved
 * @returns {FlyimgFlyimg} - Service instance
 * @example
 * import { Context } from '@osaas/client-core';
 * import { getFlyimgFlyimgInstance } from '@osaas/client-services';
 *
 * const ctx = new Context();
 * const instance = await getFlyimgFlyimgInstance(ctx, 'myinstance');
 * console.log(instance.url);
 */
export async function getFlyimgFlyimgInstance(
  ctx: Context,
  name: string
): Promise<FlyimgFlyimg> {
  const serviceAccessToken = await ctx.getServiceAccessToken('flyimg-flyimg');
  return await getInstance(ctx, 'flyimg-flyimg', name, serviceAccessToken);
}
